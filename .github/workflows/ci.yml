name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: myapp

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Para autenticación OIDC si se implementa a futuro

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up environment variables
        id: vars
        run: echo "IMAGE_TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV

      # Configurar credenciales de AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login a Amazon ECR
      - name: Login to Amazon ECR
        uses: docker/login-action@v3
        with:
          ecr: auto

      # Login a Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build de imagen Docker
      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$IMAGE_TAG .

      # Tag y Push a Amazon ECR
      - name: Tag and Push to Amazon ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          ECR_URI=$AWS_ACCOUNT_ID.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$IMAGE_NAME
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
          docker tag $IMAGE_NAME:latest $ECR_URI:latest
          docker push $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:latest

      # Tag y Push a Docker Hub
      - name: Tag and Push to Docker Hub
        run: |
          docker tag $IMAGE_NAME:$IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG
          docker tag $IMAGE_NAME:latest ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

      # Ejecutar pruebas (opcional, si tenés tests en npm)
      - name: Run tests
        run: |
          if [ -f package.json ]; then
            npm install
            npm test
          else
            echo "No se encontraron tests para ejecutar."
          fi
